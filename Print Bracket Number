Given a string str, the task is to find the bracket numbers, i.e., for each bracket in str, return i if the bracket is the ith opening or closing bracket to appear in the string. 

 Examples:

Input:  str = "(aa(bdc))p(dee)"
Output: 1 2 2 1 3 3
Explanation: The highlighted brackets in
the given string (aa(bdc))p(dee) are
assigned the numbers as: 1 2 2 1 3 3.

Approach - used stack to maintain counter.
use counter increament when there is '(' character and add counter in arr . when ')' character come pop out from stack and put in arr. 


class Solution {
  public:

    vector<int> bracketNumbers(string str) {
        // Your code goes here
        stack<int> st;
        vector<int>arr;
        int count=0;
        for(char ch:str){
            if(ch=='('){
                count++;
                arr.push_back(count);
                st.push(count);
            }
            else if(ch==')'){
                int temp=st.top();
                arr.push_back(temp);
                st.pop();
            }
            
        }
        return arr;
        
    }
};
