Given a binary tree and an integer target, check whether there is a root-to-leaf path with its sum as target.

Examples :

Input: tree = 1, target = 2
            /   \
          2     3
Output: false
Explanation: There is no root to leaf path with sum 2.
Input: tree = 1,  target = 4
            /   \
          2     3
Output: true
Explanation: The sum of path from leaf node 3 to root 1 is 4.

class Solution {
  public:
    bool hasPathSum(Node *root, int target) {
        // Your code here
        if(root==NULL){
            return false;
        }
        
        if(root->left==NULL && root->right==NULL){
            if(target==root->data){
                return true;
            }
            return false;
        }
        int ntarget=target-(root->data);
        return hasPathSum(root->right,ntarget)|| hasPathSum(root->left,ntarget);
        
        
    }
};
